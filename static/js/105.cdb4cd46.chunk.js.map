{"version":3,"file":"static/js/105.cdb4cd46.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/ReviewsPage.module.scss?2842","pages/ReviewsPage/ReviewsPage.jsx","shared/api.js","shared/getDate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\",\"animate\":\"Loader_animate__eugiA\"};","import styles from './Loader.module.scss';\n\nconst Loader = () => (\n  <div className={styles.loader}>\n    <span></span>\n    <span></span>\n  </div>\n);\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"review_wrapper\":\"ReviewsPage_review_wrapper__flzFU\",\"review_list\":\"ReviewsPage_review_list__x-Nva\",\"review_listItem\":\"ReviewsPage_review_listItem__8icYv\",\"review_author\":\"ReviewsPage_review_author__lkzyr\",\"review_title\":\"ReviewsPage_review_title__qngOv\",\"review_date\":\"ReviewsPage_review_date__0Hogx\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews, imageUrl } from 'shared/api';\nimport { getReviewDate } from '../../shared/getDate';\nimport Loader from 'components/Loader/Loader';\nimport avatar from 'components/images/avatar.png';\n\nimport styles from './ReviewsPage.module.scss';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const elements = reviews.map(\n    ({ id, author, author_details, content, updated_at }) => (\n      <li key={id} className={styles.review_listItem}>\n        <div className={styles.review_author}>\n          {author_details.avatar_path &&\n          !author_details.avatar_path.includes('gravatar') ? (\n            <img\n              src={`${imageUrl}w45/${author_details.avatar_path}`}\n              alt={author}\n              width=\"45\"\n              height=\"45\"\n            />\n          ) : (\n            <img src={avatar} alt={author} width=\"45\" height=\"45\" />\n          )}\n          <h3>{author}</h3>/<h4>{author_details.username}</h4>\n          <p className={styles.review_date}>{getReviewDate(updated_at)}</p>\n        </div>\n        <p>{content}</p>\n      </li>\n    )\n  );\n\n  return (\n    <div className={styles.review_wrapper}>\n      {loading ? (\n        <Loader />\n      ) : reviews.length ? (\n        <>\n          <h2 className={styles.review_title}>Reviews</h2>\n          <ul className={styles.review_list}>{elements}</ul>\n        </>\n      ) : (\n        <h2 className={styles.review_title}>\n          There aren't any reviews for this moview yet!\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a034e16426b596aeae20a6d68cbc45ef',\n    language: 'en-US',\n  },\n});\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async page => {\n  const query = `/trending/movie/week?page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getPopularMovies = async () => {\n  const query = '/movie/popular';\n  const { data } = await instance.get(query);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `/movie/${movieId}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const query = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const query = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieByKeyword = async (searchQuery, page) => {\n  const query = `search/movie?query=${searchQuery}&page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n","export const getReleaseYear = releaseDate => {\n  const date = new Date(releaseDate);\n  return date.getFullYear();\n};\n\nexport const getReviewDate = updated_at => {\n  const date = new Date(updated_at);\n\n  return date.toDateString();\n};\n"],"names":["className","styles","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","data","results","console","log","elements","map","id","author","author_details","content","updated_at","avatar_path","includes","src","imageUrl","alt","width","height","avatar","username","getReviewDate","Loader","length","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","query","get","getMovieDetails","getMovieCredits","getMovieByKeyword","searchQuery","getReleaseYear","releaseDate","Date","getFullYear","toDateString"],"sourceRoot":""}