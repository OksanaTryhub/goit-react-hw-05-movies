{"version":3,"file":"static/js/49.7bf1d726.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.scss?c5cb","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api.js","shared/getDate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_wrapper\":\"MovieDetailsPage_movie_wrapper__UAkIc\",\"movie_image\":\"MovieDetailsPage_movie_image__U0KCO\",\"noImage\":\"MovieDetailsPage_noImage__V793m\",\"movie_title\":\"MovieDetailsPage_movie_title__gEjyV\",\"movie_subtitle\":\"MovieDetailsPage_movie_subtitle__whjV5\",\"movie_buttonsWrapper\":\"MovieDetailsPage_movie_buttonsWrapper__RXS3-\",\"movie_button\":\"MovieDetailsPage_movie_button__NVlQ4\",\"movie_descriptionWrapper\":\"MovieDetailsPage_movie_descriptionWrapper__EAy2o\",\"movie_description\":\"MovieDetailsPage_movie_description__PXBDT\"};","import { useState, useEffect, useCallback } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieDetails, imageUrl } from 'shared/api';\nimport { getReleaseYear } from '../../shared/getDate';\nimport noImage from 'components/images/noImagePlaceholder.png';\nimport styles from './MovieDetailsPage.module.scss';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { from } = location.state;\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n        setGenres(data.genres);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchMovieData();\n  }, [movieId]);\n\n  const { title, overview, release_date, poster_path } = movie;\n\n  const getMovieGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <main className={styles.movie_details}>\n      <div className={styles.movie_wrapper}>\n        <button className={styles.movie_button} onClick={goBack}>\n          ‚Üê Go back\n        </button>\n        {poster_path ? (\n          <img\n            className={styles.movie_image}\n            src={`${imageUrl}w342/${poster_path}`}\n            alt={movie?.title}\n          />\n        ) : (\n          <img\n            className={styles.noImage}\n            src={noImage}\n            alt={movie?.title}\n            width=\"342\"\n            height=\"513\"\n          />\n        )}\n\n        <div className={styles.movie_descriptionWrapper}>\n          <div className={styles.movie_description}>\n            <div>\n              <h2 className={styles.movie_title}>\n                {title ? title : 'Movie title'}\n              </h2>\n              <h3 className={styles.movie_subtitle}>\n                {release_date\n                  ? getReleaseYear(release_date)\n                  : 'Release date unknown'}\n              </h3>\n              <h4 className={styles.movie_subtitle}>\n                {getMovieGenres(genres)}\n              </h4>\n            </div>\n\n            <p>{overview}</p>\n          </div>\n          <div className={styles.movie_buttonsWrapper}>\n            <Link to=\"cast\" state={{ from }}>\n              <button className={styles.movie_button}>Cast</button>\n            </Link>\n            <Link to=\"reviews\" state={{ from }}>\n              <button className={styles.movie_button}>Reviews</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a034e16426b596aeae20a6d68cbc45ef',\n    language: 'en-US',\n  },\n});\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async page => {\n  const query = `/trending/movie/week?page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getPopularMovies = async () => {\n  const query = '/movie/popular';\n  const { data } = await instance.get(query);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `/movie/${movieId}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const query = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const query = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieByKeyword = async (searchQuery, page) => {\n  const query = `search/movie?query=${searchQuery}&page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n","export const getReleaseYear = releaseDate => {\n  const date = new Date(releaseDate);\n  return date.getFullYear();\n};\n\nexport const getReviewDate = updated_at => {\n  const date = new Date(updated_at);\n\n  return date.toDateString();\n};\n"],"names":["useState","movie","setMovie","genres","setGenres","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieData","getMovieDetails","data","response","console","log","message","title","overview","release_date","poster_path","goBack","useCallback","className","styles","onClick","src","imageUrl","alt","noImage","width","height","getReleaseYear","map","genre","name","join","getMovieGenres","to","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","query","get","getMovieCredits","getMovieReviews","getMovieByKeyword","searchQuery","releaseDate","Date","getFullYear","getReviewDate","updated_at","toDateString"],"sourceRoot":""}