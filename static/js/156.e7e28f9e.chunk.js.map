{"version":3,"file":"static/js/156.e7e28f9e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.scss?7880","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.scss?bae6","pages/HomePage/HomePage.jsx","shared/api.js","shared/getDate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loadMoreBtn\":\"Button_loadMoreBtn__qZU+T\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className={styles.loadMoreBtn} onClick={onClick}>\n    <span>Load more</span>\n  </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__DwtSp\",\"animate\":\"Loader_animate__eugiA\"};","import styles from './Loader.module.scss';\n\nconst Loader = () => (\n  <div className={styles.loader}>\n    <span></span>\n    <span></span>\n  </div>\n);\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"imageGalleryItem__image\":\"MovieListItem_imageGalleryItem__image__jDY3S\",\"imageGalleryItem\":\"MovieListItem_imageGalleryItem__GFXiW\",\"info\":\"MovieListItem_info__mh7Hg\",\"title\":\"MovieListItem_title__r5uEa\",\"subtitle\":\"MovieListItem_subtitle__DX-Dk\"};","import PropTypes from 'prop-types';\n\nimport styles from './MovieListItem.module.scss';\n\nconst MovieListItem = ({ image, title, date }) => {\n  return (\n    <li className={styles.imageGalleryItem}>\n      <img className={styles.imageGalleryItem__image} src={image} alt={title} />\n      <div className={styles.info}>\n        <h3 className={styles.title}>{title}</h3>\n        <h4 className={styles.subtitle}>{date}</h4>\n      </div>\n    </li>\n  );\n};\n\nexport default MovieListItem;\n\nMovieListItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__pH29x\",\"movieListItem\":\"MovieList_movieListItem__zglPR\",\"movieListTitle\":\"MovieList_movieListTitle__FtWOF\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport { imageUrl } from '../../shared/api.js';\nimport { getReleaseYear } from '../../shared/getDate';\nimport noImage from 'components/images/noImagePlaceholder.png';\n\nimport styles from './MovieList.module.scss';\n\nconst MovieList = ({ movies, titleList }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <h2 className={styles.movieListTitle}>{titleList}</h2>\n      <ul className={styles.movieList}>\n        {movies.map(({ id, title, release_date, poster_path }) => (\n          <Link\n            key={id}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={styles.movieListItem}\n          >\n            <MovieListItem\n              image={\n                poster_path !== null\n                  ? `${imageUrl}w342/${poster_path}`\n                  : noImage\n              }\n              date={\n                release_date\n                  ? getReleaseYear(release_date)\n                  : 'Release date unknown'\n              }\n              title={title}\n            />\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  movies: [],\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n  titleList: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"HomePage_text__XGIBu\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getTrendingMovies } from '../../shared/api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport Button from 'components/Button/Button';\n\nimport styles from './HomePage.module.scss';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  // const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page') || 1;\n\n  useEffect(() => {\n    const getMovies = (data, page) => {\n      return page === 1\n        ? setMovies(data)\n        : setMovies(prevMovies => [...prevMovies, ...data]);\n    };\n\n    const fetchTrendingMovies = async () => {\n      try {\n        setLoading(true);\n\n        const data = await getTrendingMovies(page);\n        getMovies(data.results, page);\n\n        setTotalPages(data.total_pages);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, [setMovies, page]);\n\n  const loadMore = () => {\n    setSearchParams({ page: Number(page) + 1 });\n  };\n\n  const myMap = new Map();\n  movies.forEach(movie => myMap.set(movie.id, movie));\n  const uniqueMovies = Array.from(myMap.values());\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {movies && (\n        <MovieList\n          movies={uniqueMovies}\n          titleList={<p className={styles.text}>Trending movies</p>}\n        />\n      )}\n\n      {!loading && totalPages > 1 && page < totalPages && (\n        <Button onClick={loadMore} />\n      )}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'a034e16426b596aeae20a6d68cbc45ef',\n    language: 'en-US',\n  },\n});\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async page => {\n  const query = `/trending/movie/week?page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getPopularMovies = async () => {\n  const query = '/movie/popular';\n  const { data } = await instance.get(query);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `/movie/${movieId}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const query = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const query = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(query);\n  return data;\n};\n\nexport const getMovieByKeyword = async (searchQuery, page) => {\n  const query = `search/movie?query=${searchQuery}&page=${page}`;\n  const { data } = await instance.get(query);\n  return data;\n};\n","export const getReleaseYear = releaseDate => {\n  const date = new Date(releaseDate);\n  return date.getFullYear();\n};\n\nexport const getReviewDate = updated_at => {\n  const date = new Date(updated_at);\n\n  return date.toDateString();\n};\n"],"names":["onClick","type","className","styles","image","title","date","src","alt","MovieList","movies","titleList","location","useLocation","map","id","release_date","poster_path","to","state","from","imageUrl","noImage","getReleaseYear","defaultProps","useState","setMovies","totalPages","setTotalPages","loading","setLoading","useSearchParams","searchParams","setSearchParams","page","get","useEffect","getMovies","data","prevMovies","fetchTrendingMovies","getTrendingMovies","results","total_pages","console","log","myMap","Map","forEach","movie","set","uniqueMovies","Array","values","Loader","Button","Number","instance","axios","baseURL","params","api_key","language","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","getMovieByKeyword","searchQuery","releaseDate","Date","getFullYear","getReviewDate","updated_at","toDateString"],"sourceRoot":""}